@model EventTicketingSystem.Models.EventDetailsVm
@{
  ViewData["Title"] = Model.Title;

  string StatusClass(string s) => s?.ToLower() switch
  {
    "live" => "success",
    "upcoming" => "secondary",
    "completed" => "dark",
    "cancelled" => "danger",
    _ => "secondary"
  };
}

<div class="container py-4">
@if (!string.IsNullOrWhiteSpace(Model.ImagePath))
{
    <div class="mb-3">
      <img src="@Model.ImagePath" alt="@Model.Title" class="img-fluid rounded"
        style="max-height:360px; width:100%; object-fit:cover;" />
    </div>
}
  <div class="row">
    <div class="col-lg-8">
      <div class="d-flex align-items-center gap-2 mb-2"></div>
      <h1 class="h3 mb-0">@Model.Title</h1>
      <span class="badge text-bg-@StatusClass(Model.Status)">@Model.Status</span>


      <div class="text-muted mb-3">
        @Model.StartsAt.ToString("dddd, dd MMM yyyy • h:mm tt") — @Model.Venue
        <br />
        Category: <span class="badge text-bg-light">@Model.Category</span>
      </div>

      <p class="mb-4">@Model.Description</p>
    </div>
    <div class="col-lg-4">
      <div class="card border-0 shadow-sm">
        <div class="card-body">
          <div class="mb-2">Price</div>
          <div class="h4">LKR @Model.TicketPrice.ToString("N0")</div>
          <div class="small text-muted mb-3">
            Available: @(Model.TotalTickets - Model.SoldCount) / @Model.TotalTickets
          </div>

          @if (Model.CanBuy)
          {
            <a class="btn btn-dark w-100" asp-controller="Checkout" asp-action="Start" asp-route-id="@Model.EventId">
              Book Now
            </a>
            <div class="small text-muted mt-2">Sales are open.</div>
          }
          else
          {
            <button class="btn btn-dark w-100" type="button" disabled>Book Now</button>
            <div class="small text-muted mt-2">
              @if (Model.Status.Equals("Upcoming", StringComparison.OrdinalIgnoreCase))
              {
                <span>Ticket sales have not started yet.</span>
              }
              else if (Model.Status.Equals("Cancelled", StringComparison.OrdinalIgnoreCase))
              {
                <span>This event has been cancelled.</span>
              }
              else if (Model.Status.Equals("Completed", StringComparison.OrdinalIgnoreCase))
              {
                <span>This event has ended.</span>
              }
              else
              {
                <span>Sales are not available for this event.</span>
              }
            </div>
          }
          <div class="small text-muted mb-3">
            Available: @(Model.Remaining) / @Model.TotalTickets
            @if (Model.Remaining <= 0)
            {
              <span class="badge text-bg-dark ms-2">Sold out</span>
            }
          </div>
          <div class="small text-muted mt-3">Organizer: @Model.OrganizerName</div>

        </div>
      </div>
    </div>
  </div>
