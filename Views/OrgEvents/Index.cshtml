@model List<EventTicketingSystem.Controllers.MyEventRow>
@{
    ViewData["Title"] = "My Events";
    int page = (int)ViewBag.Page;
    int pageSize = (int)ViewBag.PageSize;
    int totalPages = (int)ViewBag.TotalPages;
    string? q = ViewBag.Q as string;
    string status = ViewBag.Status as string ?? "All";

    string StatusClass(string s) => s?.ToLower() switch
    {
        "live" => "success",
        "upcoming" => "secondary",
        "completed" => "dark",
        "cancelled" => "danger",
        _ => "secondary"
    };
}

<div class="container py-4">
  @if (TempData["OrgEventMessage"] is string msg)
  {
    <div class="alert alert-success">@msg</div>
  }

  <div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h4 mb-0">My Events</h1>
    <a class="btn btn-dark" asp-action="Create">+ New Event</a>
  </div>

  <form method="get" class="row g-2 mb-3">
    <div class="col-12 col-md-5">
      <input class="form-control" name="q" value="@q" placeholder="Search by title or venue..." />
    </div>
    <div class="col-6 col-md-3">
     <select name="status" class="form-select" onchange="this.form.submit()">
  @if (status == "All")       { <option value="All" selected>All statuses</option> }
  else                        { <option value="All">All statuses</option> }

  @if (status == "Upcoming")  { <option value="Upcoming" selected>Upcoming</option> }
  else                        { <option value="Upcoming">Upcoming</option> }

  @if (status == "Live")      { <option value="Live" selected>Live</option> }
  else                        { <option value="Live">Live</option> }

  @if (status == "Completed") { <option value="Completed" selected>Completed</option> }
  else                        { <option value="Completed">Completed</option> }

  @if (status == "Cancelled") { <option value="Cancelled" selected>Cancelled</option> }
  else                        { <option value="Cancelled">Cancelled</option> }
</select>
    </div>
    <div class="col-3 col-md-2">
      <select name="pageSize" class="form-select" onchange="this.form.submit()">
  @if (pageSize == 6)   { <option value="6" selected>6 per page</option> }
  else                  { <option value="6">6 per page</option> }

  @if (pageSize == 12)  { <option value="12" selected>12 per page</option> }
  else                  { <option value="12">12 per page</option> }

  @if (pageSize == 24)  { <option value="24" selected>24 per page</option> }
  else                  { <option value="24">24 per page</option> }
</select>

    </div>
    <div class="col-3 col-md-2">
      <button class="btn btn-outline-secondary w-100" type="submit">Search</button>
    </div>
  </form>

  @if (Model.Count == 0)
  {
    <div class="alert alert-light border-0 shadow-sm">No events found.</div>
  }
  else
  {
    <div class="table-responsive">
      <table class="table align-middle">
        <thead>
          <tr>
            <th>Title</th>
            <th>When</th>
            <th>Venue</th>
            <th>Status</th>
            <th>Sold/Total</th>
            <th class="text-end">Actions</th>
          </tr>
        </thead>
        <tbody>
        @foreach (var e in Model)
        {
          <tr>
            <td>@e.Title</td>
            <td>@e.StartsAtLocal.ToString("dd MMM yyyy, h:mm tt")</td>
            <td>@e.Venue</td>
            <td><span class="badge text-bg-@StatusClass(e.Status)">@e.Status</span></td>
            <td>
              @e.Sold / @e.Total
              @if (e.Total - e.Sold <= 0) { <span class="badge text-bg-dark ms-2">Sold out</span> }
            </td>
            <td class="text-end">
              <a class="btn btn-sm btn-outline-secondary"
                 asp-controller="Events" asp-action="Details" asp-route-id="@e.Id">View</a>

              @if (e.Status == "Upcoming" || e.Status == "Live")
              {
                <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@e.Id">Edit</a>
              }

              @if (e.Status == "Upcoming")
              {
                <form method="post" asp-action="Publish" asp-route-id="@e.Id" class="d-inline">
                  @Html.AntiForgeryToken()
                  <button class="btn btn-sm btn-success" type="submit">Publish</button>
                </form>
              }
              else if (e.Status == "Live")
              {
                <form method="post" asp-action="Unpublish" asp-route-id="@e.Id" class="d-inline"
                      onsubmit="return confirm('Unpublish this event? Sales will stop.');">
                  @Html.AntiForgeryToken()
                  <button class="btn btn-sm btn-warning" type="submit">Unpublish</button>
                </form>
              }

              @if (e.Status != "Cancelled" && e.Status != "Completed")
              {
                <form method="post" asp-action="Cancel" asp-route-id="@e.Id" class="d-inline"
                      onsubmit="return confirm('Cancel this event? This cannot be undone.');">
                  @Html.AntiForgeryToken()
                  <button class="btn btn-sm btn-outline-danger" type="submit">Cancel</button>
                </form>
              }
            </td>
          </tr>
        }
        </tbody>
      </table>
    </div>

    @if (totalPages > 1)
    {
      <nav>
        <ul class="pagination">
          @{
            var prev = page - 1; var next = page + 1;
            var qs = $"&q={q}&status={status}&pageSize={pageSize}";
          }
          <li class="page-item @(page==1?"disabled":"")">
            <a class="page-link" href="?page=@prev@qs">Previous</a>
          </li>
          @for (int i = 1; i <= totalPages; i++)
          {
            <li class="page-item @(i==page?"active":"")">
              <a class="page-link" href="?page=@i@qs">@i</a>
            </li>
          }
          <li class="page-item @(page==totalPages?"disabled":"")">
            <a class="page-link" href="?page=@next@qs">Next</a>
          </li>
        </ul>
      </nav>
    }
  }
</div>
